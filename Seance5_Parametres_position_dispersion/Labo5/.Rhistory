2/15
3/15
4/15
2 + (1-2)*(50 - 71.4)/(44.5 - 71.4)
414 + 242 + 398 + 226 + 115 + 58 +14 +7
1474/2
1475/2
416 + 242
416 + 242 + 398
2 + (1-2)/(658-1056)*(737 - 1056)
3 + (2-3)/(71.4 - 86.8)*(71.4 - 86.8)
3 + (2-3)/(71.4 - 86.8)*(75% - 86.8)
3 + (2-3)/(71.4 - 86.8)*(75 - 86.8)
22.19 - 1,96*5.099
22.19 - 1.96*5.099
22.19 + 1.96*5.099
22.19 - 1.96*5.099/sqrt(1202)
22.19 + 1.96*5.099/sqrt(1202)
22.19 - 5.099
22.19 + 5.099
22.19 - 2*5.099
22.19 + 2*5.099
2 + (1-2)/(44.5 - 71.4)*(50 - 71.4)
414*0 + 242*1 + 298*2 + 226*3 + 115*4 + 58*5 + 14*6 + 7*7
414 + 242 + 398 + 226 + 115 + 58 + 14 +7
1474
moyenne <- 2399 / 1474
moyenne
# CrÃ©ons d'abord des vecteurs
marque_1994 <- c("Mazda 626", "Honda Accord", "Chevrolet Corsica", "Buick Century", "Oldsmobile Cutlass Ciera", "Oldsmobile Achieva", "Pontiac Grand Am", "Infiniti G20", "Mitsubishi Galant", "Dodge Spirit", "Plymouth Acclaim", "Subaru Legacy", "Toyota Camry", "Hyundai Sonata", "Chrysler LeBaron", "Ford Taurus", "Mercury Sable", "Eagle Vision")
marque_1994
annee_pas_cool_1994 <- c(1994, 1994, 1994,1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994, 1994)
annee_pas_cool_1994
length(marque_1994)
annee_un_peu_bon_1994 <- c(rep(1994, 18))
annee_un_peu_bon_1994
annee_1994 <- c(rep(1994, length(marque_1994)))
annee_1994
mpg_ville_1994 <- c(23, rep(22, 4), rep(21, 6), rep(20, 2), rep(19, 2), rep(18, 3))
mpg_ville_1994
mpg_autoroute_1994 <- c(31, 29, rep(28, 3), rep(32, 2), 29, 28, rep(27, 2), 28, 27, 26, 25, rep(27, 2), 26)
mpg_autoroute_1994
donnee_1994 <- data.frame(marque = marque_1994, annee = annee_1994, vitesse_ville = mpg_ville_1994, vitesse_autoroute = mpg_autoroute_1994)
View(donnee_1994)
marque_2009 <- c("Toyota Prius (hybrid)", "Nissan Altima (hybrid)", "Toyota Camry (hybrid)", "Chevrolet Malibu (hybrid)", "Saturn Aura (hybrid)", "Hyundai Elantra", "Kia Spectra", "Nissan Altima", "Saturn Aura", "Kia Optima", "Hyundai Sonata", "Honda Accord", "Chevrolet Malibu", "Toyota Camry", "Volkswagen Passat", "Mazda 6", "Chrysler Sebring", "Dodge Avenger", "Ford Fusion", "Mercury Milan", "Mitsubishi Galant", "Subaru Legacy", "Nissan Maxima", "Nissan Altima", "Mercury Sable", "Hyundai Azera", "Buick LaCrosse/Allure")
annee_2009 <- c(rep(2009, length(marque_2009)))
mpg_ville_2009 <- c(48, 35, 33, rep(26, 2), 25, 24, 23, rep(22, 5), rep(21, 5), rep(20, 4), rep(19, 2), rep(18, 2), 17)
mpg_autoroute_2009 <- c(45, 33, rep(34,3), 33, rep(32,2), 33, NA , 32, 31, 30, rep(31,2), rep(30,3), rep(29,2), rep(27,2), 260, 26, 28, 26, 28)
donnee_2009 <- data.frame(marque = marque_2009, annee = annee_2009, vitesse_ville = mpg_ville_2009, vitesse_autoroute = mpg_autoroute_2009)
donnee_2009
View(donnee_2009)
moyenne_1994 <- mean(donnee_1994$vitesse_ville)
moyenne_1994
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
mode_1994 <- getmode(donnee_1994$vitesse_ville)
mode_1994
Q1_1994 <- quantile(donnee_1994$vitesse_ville, prob = 0.25)
Q1_1994
Q3_1994 <- quantile(donnee_1994$vitesse_ville, prob = 0.75)
Q3_1994
variance_1994 <- var(donnee_1994$vitesse_ville)
variance_1994
variance_2009_autoroute <- var(donnee_2009$vitesse_autoroute)
variance_2009_autoroute
variance_2009_autoroute <- var(donnee_2009$vitesse_autoroute, na.rm = TRUE)
variance_2009_autoroute
View(donnee_2009)
library(summarytools)
descr(donnee_1994$vitesse_ville)
saveRDS(donnee_1994, "donnee1994.RDS")
d1994 <- readRDS("donnee1994.RDS")
d1994 <- readRDS("donnee1994.RDS")
View(d1994)
crsc96 <- read.csv("cora-crsc1996-E-1996_F1.csv")
crscr96_t <- read_csv("cora-crsc1996-E-1996_F1.csv")
library(tidyverse)
crsc96_t <- read_csv("cora-crsc1996-E-1996_F1.csv")
crsc96_small_b <- subset(crsc96, select = c(sexq, region, age, q2))
crsc96_small_t <-
crsc96 %>%
select(sexq, region, age, q2)
crsc96_homme_b <- subset(crsc96, subset = sexq == 1)
crsc96_homme_t <-
crsc96 %>%
filter(sexq == 1)
crsc96_small_b <- subset(crsc96, select = c(sexq, region, age, q2), subset = sexq == 1)
crsc96_small_homme_t <-
crsc96 %>%
select(sexq, region, age, q2) %>%
filter(sexq == 1)
View(crsc96_small_b)
crsc96_small_b$age25(age <= 25) <- "Moins de 25 ans"
crsc96_small_b$age25(crsc96_small_b$age <= 25) <- "Moins de 25 ans"
crsc96_small_b$age25[crsc96_small_b$age] <= 25) <- "Moins de 25 ans"
crsc96_small_b$age25(crsc96_small_b$age <= 25) <- "Moins de 25 ans"
crsc96_small_b$age25[crsc96_small_b$age <= 25] <- "Moins de 25 ans"
crsc96_small_b$age25[crsc96_small_b$age <= 27] <- "Moins de 27 ans"
crsc96_small_b$age25[crsc96_small_b$age >= 27] <- "PLus de 27 ans"
crsc96_small_b$age25[crsc96_small_b$age <= 25] <- "25 ans et moins"
crsc96_small_b$age25[crsc96_small_b$age > 25] <- "PLus de 25 ans"
View(crsc96_small_homme_t)
crsc96_small_homme_t <-
crsc96_small_homme_t %>%
mutate(age25 = age >=25)
crsc96_homme_t <-
crsc96_homme_t %>%
mutate(age25_bis = if_else(age <= 25, "25 ans et moins", "Plus de 25 ans"))
crsc96_small_homme_t <-
crsc96_small_homme_t %>%
mutate(age25_bis = if_else(age <= 25, "25 ans et moins", "Plus de 25 ans"))
crsc96_small_homme_t <-
crsc96_small_homme_t %>%
mutate(age_4groupe = case_when(
age <= 25 ~ "25 ans ou moins",
age > 25 & age < 35 ~ "26 - 34 ans",
age >= 35 & age < 55 ~ "35 - 54",
age > 55 ~ "plus de 55 ans"
))
crsv <-
crsc96 %>%
mutate(age_carre = age^2)
View(crsc96)
33^2
View(crsv)
crsc96 <-
crsc96 %>%
mutate(age_carre = age^2)
View(crsc96)
library(tidyverse)
library(tidyverse)
dhs_ipv <- read_csv("dhs_ipv.csv")
View(dhs_ipv)
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school))
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "blue")
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue")
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red")
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red") +
theme_bw()
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red") +
theme_classic()
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red") +
theme_dark()
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red") +
theme_dark() +
facet_wrap(region)
ggplot(dhs_ipv) +
geom_histogram(aes(x = sec_school), fill = "lightblue", color = "red") +
theme_dark() +
facet_wrap(~region)
knitr::include_graphics("distribution_echantillonnage.jpg")
knitr::include_graphics("tcl.jpg")
bi <- qt(0.025, df=1938)
bs <- qt(0.975, df=1938)
c(bi, bs)
acceptation_rejet <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 1940, args = list(df = 120), color = "blue") +
geom_vline(aes(xintercept = bi, color = "red")) +
geom_vline(aes(xintercept = bs, color = "green")) +
theme(legend.position = "none")
acceptation_rejet <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 1940, args = list(df = 120), color = "blue") +
geom_vline(aes(xintercept = bi, color = "red")) +
geom_vline(aes(xintercept = bs, color = "green")) +
theme(legend.position = "none")
age <- c(10, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14, 14)
n <- seq(1, 12, 1)
data <- as_data_frame(bind_cols(n = n, age = age))
library(tidyverse)
age <- c(10, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14, 14)
n <- seq(1, 12, 1)
data <- as_data_frame(bind_cols(n = n, age = age))
bp <- ggplot(data) +
geom_boxplot(aes( y = age))
bp
distr_student <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 200, args = list(df = 5), color = "blue")
distr_student
qt(0.5, df=5)
qt(0.025, df=5)
qt(0.975, df=5)
student_normale <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, n = 250, args = list(mean = 0, sd = 1), color = "red")
stat_function(fun = dt, n = 250, args = list(df = 5), color = "blue")
student_normale
ddl <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 250, args = list(df = 5), color = "blue") +
stat_function(fun = dt, n = 250, args = list(df = 1), color = "green")
ddl
courbe <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 1940, args = list(df = 120), color = "blue")
courbe
bi <- qt(0.025, df=1938)
bs <- qt(0.975, df=1938)
c(bi, bs)
acceptation_rejet <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, n = 1940, args = list(df = 120), color = "blue") +
geom_vline(aes(xintercept = bi, color = "red")) +
geom_vline(aes(xintercept = bs, color = "green")) +
theme(legend.position = "none")
acceptation_rejet
numerateur <- 2.75 - 3.01
denominateur <- sqrt((855*2.030^2 + 1085*2.225^2)/(855 + 1085 - 2)*(855 + 1085)/(855*1085))
t_calcule <- numerateur/denominateur
t_calcule
?dnorm
courbe_normale <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, , args = list(mean = 5, sd = 2), color = "blue") +
stat_function(fun = dt, n = 250, args = list(df = 1), color = "green")
courbe_normale
courbe_normale <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, , args = list(mean = 1, sd = 1), color = "blue") +
stat_function(fun = dt, n = 250, args = list(df = 1), color = "green")
courbe_normale
courbe_normale <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, , args = list(mean = 0, sd = 1), color = "blue") +
stat_function(fun = dt, n = 250, args = list(df = 1), color = "green")
courbe_normale
courbe_normale <-
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue")
courbe_normale
library(tidyverse)
dist_t <- ggplot(data = data.frame(t = c(-4, 4)), aes(t)) +
stat_function(fun = dt, args = list(df = 45), color = "red") #+
# stat_function(fun = dt, args = list(df = 5), color = "green")
dist_t
courbe_normale
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red",
geom = "area", fill = "lightblue",
xlim = c(-1, 1))
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red",
geom = "area", fill = "lightblue", xlim = c(-2, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-2, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-2, 2), alpha = 0.4)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "green",
geom = "area", fill = "green", xlim = c(-2, 2), alpha = 0.4)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "green",
geom = "area", fill = "green", xlim = c(-2, 2), alpha = 0.2)
qnorm(0.2, mean = 0, sd = 1)
qnorm(0.8, mean = 0, sd = 1)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-1, 1)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "green",
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "blue",
geom = "area", fill = "lightblue", xlim = c(-2, 4, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "green",
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "lightblue", xlim = c(-2, 4, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "green",
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "lightblue", xlim = c(-2, 4, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "lightblue", xlim = c(2, 4, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "lightblue", xlim = c(2, 4, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "green", xlim = c(-2, 4), alpha = 0.2)
v1 <- qnorm(0.2, mean = 0, sd = 1)
v1
v2 <- qnorm(0.8, mean = 0, sd = 1)
v2
ggplot(data = data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red") +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "lightblue", xlim = c(-4, -2, alpha = 0.2)) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "area", fill = "green", xlim = c(-4, 2), alpha = 0.2)
v1
knitr::include_graphics("tcl.jpg")
courbe_normale <-
ggplot(data = data.frame(x = c(62, 76)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = 1.02), color = "blue")
courbe_normale
erreur-type <- 3.22/sqrt(10)
erreur_type <- 3.22/sqrt(10)
erreur_type
dis <-
ggplot(data = data.frame(x = c(62, 76)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = erreur_type), color = "blue")
dis <-
distibution <-
ggplot(data = data.frame(x = c(62, 76)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = erreur_type), color = "blue")
distribution
dis <-
distribution <-
ggplot(data = data.frame(x = c(62, 76)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = erreur_type), color = "blue")
distribution
dis <-
distribution <-
ggplot(data = data.frame(x = c(64, 74)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = erreur_type), color = "blue")
distribution
dis <-
distribution <-
ggplot(data = data.frame(x = c(64, 74)), aes(x)) +
stat_function(fun = dnorm, args = list(mean = 69, sd = erreur_type), color = "blue") +
geom_vline(aes(xintercept = 71, color = "red")) +
geom_vline(aes(xintercept = 67, color = "green")) +
theme(legend.position = "none")
distribution
set.seed(430)
marathon_S2 <- simple_rs(N = 100, prob = 0.5)
set.seed(430)
marathon_S1 <- sample_n(marathon, 40, replace = FALSE)
rm(list = ls())
marathon <- read.csv("bm_results2012.txt", header = FALSE, quote = "")
# Moyenne
mean(marathon$V6)
# Mediane
median(marathon$V6)
# Mode
# variance
var(marathon$V6)
# Ãcart-type
sd(marathon$V6)
library(tidyverse)
fig1 <-
ggplot(marathon) +
geom_histogram(aes(x = V6), color="black", fill="white") +
geom_freqpoly(aes(x = V6), colour = "blue") +
stat_function(fun = dnorm, args = list(mean = mean(marathon$V6), sd = sd(marathon$V6)), colour = "green") +
geom_vline(aes(xintercept = mean(V6)), color = "red", linetype = "dashed") +
labs(title = "Histogramme du Marathon de 2002",
x = "Temps pour complÃ©ter le marathon",
y = "Nombre de coureurs")
stat_function()
fig1
class(marathon$V6)
fig2 <-
ggplot(marathon) +
geom_boxplot(aes(y = V6)) +
labs(title = "Diagramme de quartile",
x = "",
y = "Temps mis")
fig2
set.seed(430)
marathon_S1 <- sample_n(marathon, 40, replace = FALSE)
head(marathon_S1)
set.seed(430)
marathon_S2 <- simple_rs(N = 100, prob = 0.5)
ggplot(marathon_S1) +
geom_histogram(aes(x = V6)) +
labs(title = "Histogramme du Marathon de 2012",
x = "Temps pour complÃ©ter le marathon",
y = "Nombre de coureurs")
caract_S1 <-
marathon_S1 %>%
summarise(moyenne = mean(V6, na.rm = TRUE),
ecarttype = sd(V6, na.rm = TRUE),
mediane = median(V6, na.rm = TRUE),
Q1 = quantile(V6, prob = 0.25),
Q3 = quantile(V6, prob = 0.75),
variance = var(V6, na.rm = TRUE))%>%
mutate(echantillon = factor("Echantillon S1"))
caract_S1
# Comparaison
caract_c <- bind_rows(caract, caract_S1)
caract <-
marathon %>%
summarise(moyenne = mean(V6, na.rm = TRUE),
ecarttype = sd(V6, na.rm = TRUE),
mediane = median(V6, na.rm = TRUE),
Q1 = quantile(V6, prob = 0.25),
Q3 = quantile(V6, prob = 0.75),
variance = var(V6, na.rm = TRUE))%>%
mutate(echantillon = factor("Echantillon S1"))
caract
# Comparaison
caract_c <- bind_rows(caract, caract_S1)
caract_c
library(summarytools)
freq(marathon$V2)
freq(marathon_S1$V2)
set.seed(123432)
marat_T10_R100 <- bind_rows(replicate(100, marathon %>% sample_n(10, replace = FALSE), simplify = F), .id = "Obs")
glimpse(marat_T10_R100)
caract_marat_T10_R100 <-
marat_T10_R100 %>%
group_by(Obs) %>%
summarise(moyenne = mean(V6, na.rm = TRUE),
ecarttype = sd(V6, na.rm = TRUE)) %>%
mutate(Taille = factor("10"))
glimpse(caract_marat_T10_R100)
esperance_moyenne <- mean(caract_marat_T10_R100$moyenne)
erreurtype <- sd(caract_marat_T10_R100$moyenne)
population_moyenne <- mean(marathon$V6)
erreurtype_calcule <- sd(marathon$V6)/sqrt(10)
tcl_T10 <- bind_cols(e_m = esperance_moyenne, mu = population_moyenne, et = erreurtype, etc = erreurtype_calcule)
tcl_T10
obslevel <- c(seq(1:100))
fig_T10_1 <-
ggplot(caract_marat_T10_R100) +
geom_point(aes(x = Obs, y = moyenne)) +
geom_hline(aes(yintercept = mean(moyenne)), colour = "red") +
geom_hline(data = marathon, aes(yintercept = mean(V6)), colour = "green") +
scale_x_discrete(limits = obslevel) +
theme(axis.text.x = element_text(angle = -60, hjust = 1, size = 6))
fig_T10_2 <-
ggplot(caract_marat_T10_R100) +
geom_histogram(aes(x = moyenne)) +
geom_vline(aes(xintercept = mean(moyenne)), colour = "red") +
geom_vline(data = marathon, aes(xintercept = mean(V6)), color = "green")
library(ggpubr)
ggarrange(fig_T10_1, fig_T10_2, ncol = 2)
set.seed(1234)
marat_T30_R100 <- bind_rows(replicate(100, marathon %>% sample_n(30, replace = FALSE), simplify = F), .id = "Obs")
caract_marat_T30_R100 <-
marat_T30_R100 %>%
group_by(Obs) %>%
summarise(moyenne = mean(V6, na.rm = TRUE),
ecarttype = sd(V6, na.rm = TRUE)) %>%
mutate(Taille = factor("30"))
head(caract_marat_T30_R100)
echantillon <- function(k, donnee, n){
bind_rows(replicate(k, donnee %>% sample_n(n, replace = FALSE), simplify = F), .id = "Obs")
}
echantillon_t30_i100 <- echantillon(100, marathon, 30)
ech <- c("taille5", "taille6")
samp_k <- vector("list", length  = 2)
names(samp_k) <- names(ech)
for (i in 5:6) {
samp_k[[i]] <- echantillon(100, marathon, i)
}
samp <- matrix(NA, nrow = length(echantillon), ncol = 7)
names(samp) <- names(marathon)
for (i in 5:6) {
samp[i, ] <- echantillon(100, marathon, i)
}
x <- c(12, 15, 26, 37, 10)
mean(x)
var(x)
var(x)*4/5
